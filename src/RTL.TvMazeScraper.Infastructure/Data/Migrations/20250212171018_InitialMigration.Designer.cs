// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RTL.TvMazeScraper.Infastructure.Data;

#nullable disable

namespace RTL.TvMazeScraper.Infastructure.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250212171018_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RTL.TvMazeScraper.Infastructure.Data.Entities.PersonEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("TvMazeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("TvMazeId")
                        .IsUnique();

                    b.ToTable("People");
                });

            modelBuilder.Entity("RTL.TvMazeScraper.Infastructure.Data.Entities.ShowEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("TvMazeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("TvMazeId")
                        .IsUnique();

                    b.ToTable("Shows");
                });

            modelBuilder.Entity("ShowCast", b =>
                {
                    b.Property<int>("PersonTvMazeId")
                        .HasColumnType("int");

                    b.Property<int>("ShowTvMazeId")
                        .HasColumnType("int");

                    b.HasKey("PersonTvMazeId", "ShowTvMazeId");

                    b.HasIndex("ShowTvMazeId");

                    b.ToTable("ShowCast");
                });

            modelBuilder.Entity("ShowCast", b =>
                {
                    b.HasOne("RTL.TvMazeScraper.Infastructure.Data.Entities.PersonEntity", null)
                        .WithMany()
                        .HasForeignKey("PersonTvMazeId")
                        .HasPrincipalKey("TvMazeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RTL.TvMazeScraper.Infastructure.Data.Entities.ShowEntity", null)
                        .WithMany()
                        .HasForeignKey("ShowTvMazeId")
                        .HasPrincipalKey("TvMazeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
